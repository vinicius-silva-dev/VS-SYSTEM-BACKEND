// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  name String
  username String @map("user_name")
  email String @unique
  password String
  role String

  @@map("users")
}

model Participante {
  id String @id @default(uuid())
  nome String
  cpfCnpj String @map("cpf_cnpj")
  tipo String @default("fisica")
  tipoContribuinte String @map("tipo_contribuinte")
  inscricaoEstadual Int @map("inscricao_estadual")
  inscricaoMunicipal Int @map("inscricao_municipal")
  situacao String @default("ativo")
  enderecoId String @map("endereco_id")
  email String
  telefone String

  endereco Endereco @relation(fields: [enderecoId], references: [id])
}

model Endereco {
  id String @id @default(uuid())
  rua String
  numero Int
  bairro String
  cidade String 
  estado String
  cep String

  participante Participante[]
}

model Produto {
  id String @id @default(uuid())
  codProd Int @unique @map("cod_prod")
  codBarras Int @unique @map("cod_barras")
  codNcm Int @map("cod_ncm")
  descricao String
  categoria String
  ativo Boolean
  tipoProd String @map("tipo_prod")
  unidadeMedida String @map("unidade_medida")
  custoMercadoria String @map("custo_mercadoria")
  precoVenda String @map("preco_venda")
  estoqueInicial Int @map("estoque_inicial")
  createdAt DateTime @map("created_at")
  updatedAt DateTime @map("updated_at")
  estoque EstoqueDisponivel[]
  estoqueAreaVenda EstoqueAreaVendas[]


  @@map("produtos")
}

model EstoqueDisponivel {
  id String @id @default(uuid())
  codProd Int
  quantidade Int
  createdAt DateTime @map("created_at")
  updatedAt DateTime @map("updated_at")

  produto Produto @relation(fields: [codProd], references: [codProd]) 
}

model EstoqueAreaVendas {
  id String @id @default(uuid())
  codProd Int
  quantidade Int
  createdAt DateTime @map("created_at")
  updatedAt DateTime @map("updated_at")
  produto Produto @relation(fields: [codProd], references:[codProd])
  @@map("estoque_area_vendas")
}

model MovimentoEstoque {
  id String @id @default(uuid())
  descricao String
  codProd Int
  quantidade Int
  createdAt DateTime @map("created_at")
  updatedAt DateTime @map("updated_at")
}

model Venda {
  id String @id @default(uuid())
  codVenda Int @unique
  valorTotal Float @map("valor_total")
  cartaoCredito Float @map("cartao_credito")
  cartaoDebito Float
  dinheiro Float
  troco Float
  desconto Float
  caixaId String @map("caixa_id")
}
